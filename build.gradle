/*

 1)  for publish on gradle plugin portal
        publishPlugins

 2) for publish into folder ../lib
        uploadArchives

  3)
        ./gradlew build --exclude-task test



    !Please limit displayName and description to 255 characters!

    for debug
        ./gradlew archidoc -Dorg.gradle.debug=true --no-daemon


*/



plugins {
    id 'java'
    //id 'groovy'
    // id 'distribution'
    id 'maven'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.10.0'
    //id "com.palantir.idea-test-fix" version "0.1.0"
}

version '1.0.7'
group = 'life.expert'

sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

wrapper {
    gradleVersion = 5.1
}


dependencies {
    testCompile("junit:junit:4.12")  //necessary - vintage
    testRuntime("org.junit.vintage:junit-vintage-engine:5.3.2")
    testImplementation gradleTestKit()

    //implementation  'io.github.classgraph:classgraph:4.6.12'
    implementation 'io.github.classgraph:classgraph:4.6.10'
}


//
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url:"file:../lib")
            //mavenLocal()
        }
    }
}
//
//
test {
    useJUnitPlatform
            {
                includeEngines 'junit-vintage'
}   }


gradlePlugin {
    plugins {
        DocumentingSoftwareArchitecture {
            id = 'life.expert.archidoc'
            implementationClass = 'life.expert.DocumentingSoftwareArchitecture'
            displayName = 'Documenting Software Architecture Plugin. Visualizing code of your application. ' +
                          'It generates full diagram of your classes into .dot(graphviz) file. Plugin is based on work - Classgraph. ' +
                          'You can open the generated .dot file in a vector editor.'
            description = displayName
        }
    }
}

pluginBundle {
    website = 'https://github.com/wilmerkrisp/archidoc'
    vcsUrl = 'https://github.com/wilmerkrisp/archidoc'
    tags = ['visualize', 'diagram', 'class', 'ddd', 'graphviz', 'dot', 'graph', 'java', 'classgraph', 'documenting', 'doc', 'architecture']
}

task cleanMyRepoFolder(type:Delete) {
    delete "../lib"
}



